<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.deloitte</groupId>
	<artifactId>deloitte-mulesoft-error-helper</artifactId>
    <!-- Maven hack: version intended to always stay at 1.0-SNAPSHOT, so the dependency will always download for dependent projects -->
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
	<name>Mule deloitte-mulesoft-error-helper Application</name>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<mule.version>3.8.5</mule.version>
    	<mule.tools.version>1.2</mule.tools.version>
    	<apiviz.version>1.3.4</apiviz.version>
    	<!-- remote repo details -->
    	<localrepo.url>http://BuildBox:8082/repository/internal</localrepo.url>
    	<localrepo.id>local-internal</localrepo.id>
    	<localrepo.name>Local Repository</localrepo.name>
    	
    	<github.global.server>github</github.global.server>
	</properties>

<!-- 	<distributionManagement> -->
<!-- 	    <repository> -->
<!-- 	        <id>${localrepo.id}</id> -->
<!-- 	        <name>${localrepo.name}</name> -->
<!-- 	        <url>${localrepo.url}</url> -->
<!-- 	    </repository> -->
<!-- 	</distributionManagement> -->

	<build>
		<plugins>
			<plugin>
				<groupId>org.mule.tools.maven</groupId>
				<artifactId>mule-app-maven-plugin</artifactId>
				<version>${mule.tools.version}</version>
				<extensions>true</extensions>
				<configuration>
                    <copyToAppsDirectory>true</copyToAppsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/app/</directory>
								</resource>
								<resource>
									<directory>src/main/api/</directory>
								</resource>
								<resource>
									<directory>mappings/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<doclet>org.jboss.apiviz.APIviz</doclet>
					<docletArtifact>
						<groupId>com.grahamedgecombe.apiviz</groupId>
						<artifactId>apiviz</artifactId>
						<version>${apiviz.version}</version>
					</docletArtifact>
					<show>public</show>
					<stylesheetfile>${basedir}/src/main/javadoc/customstylesheet.css</stylesheetfile>
					<reportOutputDirectory>${basedir}/docs</reportOutputDirectory>
					<additionalparam>
						-sourceclasspath ${project.build.outputDirectory}
					</additionalparam>
				</configuration>
			</plugin>
	<!-- following [commented out] plugins would be used for deploying the JAR 
		to GitHub. Now deploying to remote repo, instead, but leaving in commented 
		code in case it's needed again in the future. -->
			<plugin>
		        <artifactId>maven-deploy-plugin</artifactId>
		        <version>2.8.1</version>
		        <configuration>
		            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
		        </configuration>
		    </plugin>
		    <!-- 
		    message: git commit message
		    noJekyll/true: disable webpage processing
		    outputDirectory: matches distribution management repository url above
		    branch: remote branch name
		    repositoryName: github repo name
		    repositoryOwner: github username 
		    execution: run site-maven-plugin's 'site' target as part of the build's normal 'deploy phase
		    -->
		    <plugin>
	            <groupId>com.github.github</groupId>
	            <artifactId>site-maven-plugin</artifactId>
	            <version>0.11</version>
	            <configuration>
	                <message>Maven artifacts for ${project.version}</message>  
	                <noJekyll>true</noJekyll>                                  
	                <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> 
	                <branch>refs/heads/mvn-repo</branch>                       
	                <includes><include>**/*</include></includes>
	                <repositoryName>deloitte_mulesoft_error_helper</repositoryName>      
	                <repositoryOwner>davhunter</repositoryOwner>    
	            </configuration>
	            <executions>
	              <execution>
	                <goals>
	                  <goal>site</goal>
	                </goals>
	                <phase>deploy</phase>
	              </execution>
	            </executions>
	        </plugin>
		</plugins>
	</build>
	
	<!-- Mule Dependencies -->
	<dependencies>
		<!-- Xml configuration -->
		<dependency>
        	<groupId>com.mulesoft.muleesb</groupId>
			<artifactId>mule-core-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Xml configuration -->
		<dependency>
			<groupId>com.mulesoft.muleesb.modules</groupId>
			<artifactId>mule-module-spring-config-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Mule Transports -->
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-file</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-http</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
        	<groupId>com.mulesoft.muleesb.transports</groupId>
			<artifactId>mule-transport-jdbc-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
        	<groupId>com.mulesoft.muleesb.transports</groupId>
			<artifactId>mule-transport-jms-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-vm</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Mule Modules -->
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-scripting</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-xml</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- for testing -->
		<dependency>
			<groupId>org.mule.tests</groupId>
			<artifactId>mule-tests-functional</artifactId>
			<version>${mule.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-apikit</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    	<dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-spring-config</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

	<repositories>
          <!-- repository>
            <id>Central</id>
            <name>Central</name>
            <url>http://repo1.maven.org/maven2/</url>
            <layout>default</layout>
        </repository -->
        <repository>
        	<id>${localrepo.id}</id>
        	<name>${localrepo.name}</name>
        	<url>${localrepo.id}</url>
        	<layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>http://repository.mulesoft.org/releases/</url>
            <layout>default</layout>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>mulesoft-release</id>
            <name>mulesoft release repository</name>
            <layout>default</layout>
            <url>http://repository.mulesoft.org/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
